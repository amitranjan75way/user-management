{
  "/api/users": {
    "post": {
      "summary": "New user registraion for ADMIN",
      "tags": [
        "Users"
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateUser"
            },
            "example": {
              "name": "John Doe",
              "email": "johndoe@example.com",
              "password": "password123",
              "role": "USER"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "User created successfully",
          "content": {
            "application/json": {
              "example": {
                "success": true,
                "data": {
                  "id": "63f21c84e7a51093c507d202",
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "role": "USER",
                  "active": true
                },
                "message": "User created successfully"
              }
            }
          }
        },
        "409": {
          "description": "User already exists",
          "content": {
            "application/json": {
              "example": {
                "success": false,
                "error_code": 409,
                "message": "User already exists",
                "data": {}
              }
            }
          }
        }
      }
    }
  },
  "/api/users/register": {
    "post": {
      "summary": "Register a new user by ADMIN",
      "tags": [
        "Users"
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RegisterUser"
            },
            "example": {
              "name": "Jane Doe",
              "email": "janedoe@example.com",
              "password": "mypassword"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "User registered successfully",
          "content": {
            "application/json": {
              "example": {
                "success": true,
                "data": {
                  "id": "63f21c84e7a51093c507d202",
                  "name": "Jane Doe",
                  "email": "janedoe@example.com",
                  "role": "USER"
                },
                "message": "User registered successfully"
              }
            }
          }
        },
        "409": {
          "description": "User already exists",
          "content": {
            "application/json": {
              "example": {
                "success": false,
                "error_code": 409,
                "message": "User already exists",
                "data": {}
              }
            }
          }
        }
      }
    }
  },
  "/api/users/login": {
    "post": {
      "summary": "Login for ADMIN",
      "tags": [
        "Users"
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LoginUser"
            },
            "example": {
              "email": "janedoe@example.com",
              "password": "mypassword"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "User logged in successfully",
          "content": {
            "application/json": {
              "example": {
                "success": true,
                "data": {
                  "user": {
                    "id": "63f21c84e7a51093c507d202",
                    "name": "Jane Doe",
                    "email": "janedoe@example.com",
                    "role": "USER"
                  },
                  "accessToken": "jwt-token"
                },
                "message": "User logged in successfully"
              }
            }
          }
        },
        "401": {
          "description": "Invalid credentials",
          "content": {
            "application/json": {
              "example": {
                "success": false,
                "error_code": 401,
                "message": "Invalid credentials",
                "data": {}
              }
            }
          }
        }
      }
    }
  },
  "/api/users/reset-password": {
    "post": {
      "summary": "Reset user password via received eamil",
      "tags": [
        "Users"
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ResetPassword"
            },
            "example": {
              "resetLink": "http://localhost:3000/reset-password?token=some-jwt-token",
              "newPassword": "newSecurePassword"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Password reset successfully",
          "content": {
            "application/json": {
              "example": {
                "success": true,
                "data": {},
                "message": "Password reset successfully"
              }
            }
          }
        }
      }
    }
  },
  "/api/users/logout": {
    "post": {
      "summary": "Logout a user",
      "tags": [
        "Users"
      ],
      "responses": {
        "200": {
          "description": "User logged out successfully",
          "content": {
            "application/json": {
              "example": {
                "success": true,
                "data": {},
                "message": "User logged out successfully"
              }
            }
          }
        }
      }
    }
  },
  "/api/users/block/{userId}": {
    "put": {
      "summary": "Block a user by ID",
      "tags": [
        "Users"
      ],
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of the user to block",
          "schema": {
            "type": "string",
            "example": "63f21c84e7a51093c507d202"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "User blocked successfully",
          "content": {
            "application/json": {
              "example": {
                "success": true,
                "data": {
                  "id": "63f21c84e7a51093c507d202",
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "role": "USER",
                  "active": false
                },
                "message": "User blocked successfully"
              }
            }
          }
        },
        "404": {
          "description": "User not found",
          "content": {
            "application/json": {
              "example": {
                "success": false,
                "error_code": 404,
                "message": "User not found",
                "data": {}
              }
            }
          }
        }
      }
    }
  },
  "/api/users/unblock/{userId}": {
    "put": {
      "summary": "Unblock a user by ID",
      "tags": [
        "Users"
      ],
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of the user to unblock",
          "schema": {
            "type": "string",
            "example": "63f21c84e7a51093c507d202"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "User unblocked successfully",
          "content": {
            "application/json": {
              "example": {
                "success": true,
                "data": {
                  "id": "63f21c84e7a51093c507d202",
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "role": "USER",
                  "active": true
                },
                "message": "User unblocked successfully"
              }
            }
          }
        },
        "404": {
          "description": "User not found",
          "content": {
            "application/json": {
              "example": {
                "success": false,
                "error_code": 404,
                "message": "User not found",
                "data": {}
              }
            }
          }
        }
      }
    }
  },
  "/api/users/date-range": {
    "get": {
      "summary": "Retrieve users within a specified date range",
      "tags": [
        "Users"
      ],
      "parameters": [
        {
          "name": "startDate",
          "in": "query",
          "required": false,
          "description": "The start date for filtering users (ISO 8601 format). Defaults to epoch time if not provided.",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-01T00:00:00Z"
          }
        },
        {
          "name": "endDate",
          "in": "query",
          "required": false,
          "description": "The end date for filtering users (ISO 8601 format). Defaults to the current date if not provided.",
          "schema": {
            "type": "string",
            "format": "date-time",
            "example": "2023-12-31T23:59:59Z"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Users retrieved successfully",
          "content": {
            "application/json": {
              "example": {
                "success": true,
                "data": [
                  {
                    "id": "63f21c84e7a51093c507d202",
                    "name": "John Doe",
                    "email": "johndoe@example.com",
                    "role": "USER",
                    "active": true,
                    "createdAt": "2023-06-15T12:00:00Z"
                  },
                  {
                    "id": "63f21c84e7a51093c507d203",
                    "name": "Jane Smith",
                    "email": "janesmith@example.com",
                    "role": "ADMIN",
                    "active": true,
                    "createdAt": "2023-07-20T10:30:00Z"
                  }
                ],
                "message": "Users retrieved successfully"
              }
            }
          }
        },
        "400": {
          "description": "Invalid query parameters",
          "content": {
            "application/json": {
              "example": {
                "success": false,
                "error_code": 400,
                "message": "startDate must be a valid ISO 8601 date",
                "data": {}
              }
            }
          }
        }
      }
    }
  }
}